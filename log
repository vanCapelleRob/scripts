#!/bin/sh

## functions ##
log_help(){
	less $path/.help
	# clear
	#echo -e "Help pagina \n"
	#echo "WHAT:"
	#echo -e "\t log makes it possible to quicly make notes of what u are doing \n\t and storing these notes, chronologicaly in a file.\n "
	#echo -e "\t When u use the command correctly for the first time: \n\t 'log first_log' a file called first_log.log will be made in ~/.logs "
	#echo -e "\t After that running 'log first_log', you will be using the file u made the first time "

	#echo "SYNTAX:"
	#echo -e "\t log [FILE] [OPTION]"
	#echo -e "\t Only use 1 file at a time! \n"
	
	#echo -e "OPTIONS: (also always just 1) \n"
	#echo -e "\t Geen opties \t Dit laat je kort je gedachten noteren, te loggen. \n\t\t\t Bij afsluiten word je log aan het volledige log-file toegevoegd. \n"
	#echo -e "\t -e \t\t Hiermee kan je je log-file editen. \n"
	#echo -e "\t -ne \t\t Dit is de combo van geen opties en -e.\n\t\t\t Je kan dus kort een log schrijven en je volledige log-file aanpassen. \n"
	#echo -e "\t -s \t\t Dit laat je toe je log-file te bekijken met less. \n"
	#echo -e "\t -S \t\t Dit laat je toe al je gemaakte log-files te bekijken met less. \n"
	#echo -e "\t -d \t\t Dit verwijdert je log-file voorgoed. \n"
	exit
}

log_edit(){
	nano $file
}

log_show_all(){
	ls $path
	exit
}

log_show(){
	less $file
}

log_delete(){
	echo -e "Zeker dat je deze log file wil deleten? Ze zal nergens meer te vinden zijn...  \n"
	rm -i $file
}

log_new_edit(){
	echo "========== [" $when "] ==========" >>  $tempfile
	echo -e "\n" >> $tempfile
	cp $file $file"2"
	cat $tempfile $file"2" > $file
	nano $file
	rm $file"2" $tempfile
}

log_normal(){
	echo "========== [" $when "] ==========" >>  $tempfile
	nano $tempfile
	echo -e >> $tempfile
	cp $file $file"2"
	cat $tempfile $file"2" >  $file
	rm $file"2" $tempfile
}


## main code ##

path="/home/admin/.logs"

#[ ! -f $path/$1.log  ] && [ '$1' != "-h"  ] touch $path/$1.log

file=$path/$1.log
tempfile=$path/$1.temp.log
when=$(date +"%A-%d/%m/%Y-%H:%M")



# [ ! -f $2 ] && [ "$2" = "-d" ] && edit_full_file $1 || log_normal $1

if [ ! -z $1 ]; then
	case $1 in
		help)
			log_help
			;;
		-S)	
			log_show_all
			;;
		*)
			[ ! -f $path/$1.log  ] && touch $path/$1.log
			;;
	esac
else
	echo "Geef naam van logfile in."
	exit
fi


if [ ! -f $2  ]; then
	case $2 in
		-e)
			log_edit $1
			;;
		-s)	
			log_show $1
			;;
		-ne)
			log_new_edit $1
			;;
		-d)
			log_delete $1
			;;
	esac
else
	log_normal $1
fi
